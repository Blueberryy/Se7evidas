#include "GLDefs/Brightmaps/Projectiles.TXT"
#include "GLDefs/Brightmaps/LaserPewPew.TXT"
#include "GLDefs/Brightmaps/InfernalGuardian.TXT"
#include "GLDefs/Brightmaps/ArmorBonus.TXT"
#include "GLDefs/Brightmaps/Powerups.TXT"
#include "GLDefs/Brightmaps/FleshSpawn.TXT"
#include "GLDefs/Skyboxes.TXT"

pointLight MJMPMARKER {
    color 1.0 0.2 0.2
    size 32
}

hardwareShader postProcess scene {
    name "S7_Nightvision"
    shader "S7Shaders/GLSL/Nightvision.frag" 330

    uniform float "flashlightIntensity"

    // Random values sampled on the CPU, which we'll use as offsets into our 2-D
    // pseudo-random sampler here.
    uniform vec3 "offsets"
    // Mean of the Gaussian distribution that we want to sample from.
    uniform float "mean"
    // Standard deviation of the Gaussian distribution that we want to sample from.
    uniform float "stddev"
}

hardwareShader postProcess scene {
    name "S7_Invuln"
    shader "S7Shaders/GLSL/Invuln.frag" 330
}

hardwareShader postProcess scene {
    name "S7_DemonEyes"
    shader "S7Shaders/GLSL/DemonEyes.frag" 330
}

hardwareShader postProcess scene {
    name "S7_StealthShader"
    shader "S7Shaders/GLSL/StealthShader.frag" 330
    Enabled

    uniform float "stealthFactor"
}