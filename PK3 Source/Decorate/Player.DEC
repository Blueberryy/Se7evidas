// By Chronos "phantombeta" Ouroboros
//-------------------------------------------------------------------------------------------
//
// Inventory tokens
//
//-------------------------------------------------------------------------------------------
actor S7_IsPlayer              : boolean { }
actor S7_PlayerHit             : boolean { }
actor S7_IsUnderwater          : boolean { }
actor S7_Dying                 : boolean { }
actor S7_AutoReloading         : boolean { }
actor S7_DisableHud            : boolean { }
actor S7_SoulLance_BeamGrabbed : boolean { }
actor S7_HoldingZoom           : boolean { }
actor S7_ReadySequence         : boolean { }
/** Weapon slot tokens **/
actor S7_Slot1Taken : boolean { }
actor S7_Slot2Taken : boolean { }
actor S7_Slot3Taken : boolean { }
actor S7_Slot4Taken : boolean { }
actor S7_Slot5Taken : boolean { }
actor S7_Slot6Taken : boolean { }
actor S7_Slot7Taken : boolean { }
actor S7_Slot8Taken : boolean { }
actor S7_Slot9Taken : boolean { }
actor S7_Slot0Taken : boolean { }

/** Counters **/
actor S7_AirTime      : counter { inventory.maxAmount 700 }
actor S7_ZoomHoldTime : counter { }

/** Action Runners **/
actor S7_PlayerHitBloodGiver : S7_ActionRunnerBase {
    inventory.amount 1
    inventory.maxAmount 1

    +inventory.undroppable
    -inventory.invBar

    states {
        Use:
            TNT1 A 0 A_JumpIfInventory ("S7_IsPlayer", 1, "Continue")
            TNT1 A 0
            stop
        Continue:
            TNT1 A 0 A_GiveInventory ("S7_PlayerHit", 1)
            TNT1 A 0
            stop
    }
}

//-------------------------------------------------------------------------------------------
//
// Base playerpawn
//
//-------------------------------------------------------------------------------------------
actor S7_BasePlayer : playerPawn {
    // Damage
    gibHealth -50
    painChance 255
    painChance "SoulLanceSelfDamage", 0

    // Movement
    player.forwardMove 0.8, 0.8
    player.sideMove 0.8, 0.8

    /** Starting items **/
    // Weapons
    /*player.startItem S7_Raptor
    player.startItem S7_RaptorClip, 8*/
    player.startItem S7_BerserkWeap
    // Ammo and similars
    player.startItem S7_Stamina, 150
    player.startItem S7_Mana, 250
    // Keys/controls
    player.startItem S7_ReloadKey
    player.startItem S7_MeleeKey
    player.startItem S7_FiringModeKey
    player.startItem S7_ShowPop1Key
    // Tokens:
    player.startItem S7_IsPlayer
    player.startItem S7_StaminaRegen
    player.startItem S7_ManaRegen
    player.startItem S7_KickMelee
    player.startItem S7_MultiJump_Max, 1

    // Class stuff
    player.displayName "Player"

    // Weapon Slots
    player.weaponSlot 1, S7_Raptor, S7_TEC9, S7_Revolver
    player.weaponSlot 2, S7_Shotgun, S7_AMG, S7_ManxCarbine, S7_HitterSMG, S7_Fauchard, S7_SSG, S7_LaserPewPew, S7_ConquerorRifle
    player.weaponSlot 3, S7_HellwarriorBladeForm1
    player.weaponSlot 4, S7_PrettyShootyIonCannonGun, S7_PlasmaGun, S7_Thumper, S7_AntimatterGun
    player.weaponSlot 5, S7_GrenadeWeap
    player.weaponSlot 6, S7_BerserkWeap

    // Misc
    radius 16
    height 56
    player.viewHeight 48
    player.attackZOffset 20
    player.invulnerabilityMode Reflective
    player.colorRange 112, 127

    +solid +noSkin

    var int user_Step;

    states {
    Spawn:
        PLAY AAAA 1
        loop
    See:
        TNT1 A      0 A_JumpIf (user_Step >= 1, "See2")
        TNT1 A      0 A_SetUserVar ("user_Step", TRUE)
        PLAY AAAAAA 1
        PLAY BBBBBB 1
        goto Spawn
    See2:
        TNT1 A      0 A_SetUserVar ("user_Step", FALSE)
        PLAY CCCCCC 1
        PLAY DDDDDD 1
        goto Spawn
    Missile:
        PLAY E 12
        goto Spawn
    Melee:
        PLAY F 6 bright
        goto Missile
    Pain:
        PLAY G 4 A_GiveInventory ("S7_PlayerHit", 1)
        PLAY G 4 A_Pain
        goto Spawn
    Death.Suicide:
    Death:
        PLAY H  10 A_PlayerScream
        PLAY I  10
        PLAY J  10 A_NoBlocking
        PLAY K  10
        TNT1 A   0 A_PlaySound ("Misc/Body", CHAN_5)
        PLAY LM 10
        PLAY N  -1
        stop
    XDeath:
        PLAY O     5
        PLAY P     5 A_XScream
        PLAY Q     5 A_NoBlocking
        PLAY RSTUV 5
        PLAY W    -1
        stop
    Death.Fire2:
    Death.Fire:
        BURN ABC        5 bright
        BURN D          5 bright
        BURN EFGHIJKLMN 5 bright
        BURN O          5 bright A_NoBlocking
        BURN PQRSTU     5 bright
        BURN V         -1
        stop
    Death.Plasma:
        TNT1 A                  0 Thing_SetTranslation (0, 7)
        TNT1 A                  0 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        PLAY H                 10 A_PlayerScream
        PLAY I                 10 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        TNT1 A                  0 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        PLAY J                 10 A_NoBlocking
        PLAY K                 10 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        TNT1 A                  0 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        PLAY L                 10 A_PlaySound ("Misc/Body", CHAN_BODY)
        PLAY M                 10 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        TNT1 A                  0 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        PLAY NNNNNNNNNNNNNNNNNN 5 A_SpawnItemEx ("S7_BlackSmoke", random [sfx] (-16, 16), random [sfx] (-16, 16), random [sfx] (8, 16), 0, 0, 1)
        PLAY N                 -1
        stop
    }
}

//-------------------------------------------------------------------------------------------
//
// Null weapon
//
//-------------------------------------------------------------------------------------------
actor S7_NullWeapon : weapon {
    tag "Unarmed"
    height 0
    radius 0

    +noInteraction
    +inventory.undroppable
    +weapon.wimpy_Weapon +weapon.cheatNotWeapon +weapon.noAlert

    states {
    Spawn:
        TNT1 A 0
        stop
    Select:
        TNT1 A 1 A_Raise
        TNT1 A 0 A_Raise
        wait
    Deselect:
        TNT1 A 0 A_Lower
        wait
    Ready:
        TNT1 A 1 A_WeaponReady (WRF_NoFire | WRF_NoBob | WRF_NoSwitch)
        loop
    Fire:
        TNT1 A 1
        goto Ready
    }
}

//-------------------------------------------------------------------------------------------
//
// Sprinting null weapon
//
//-------------------------------------------------------------------------------------------
actor S7_Sprinting    : boolean { }
actor S7_SprintWeapon : S7_NullWeapon {
    states {
    Ready:
        TNT1 AA 1 A_WeaponReady (WRF_NoFire | WRF_NoBob | WRF_NoSwitch)
        TNT1 A  1 A_GiveInventory ("S7_Sprinting", 1)
    Ready2:
        TNT1 A 0 A_JumpIfInventory ("S7_Sprinting", 1, 1)
        goto Ready3
        TNT1 A 1 A_WeaponReady (WRF_NoFire | WRF_NoBob | WRF_NoSwitch)
        loop
    Ready3:
        TNT1 A 1 A_WeaponReady (WRF_NoFire | WRF_NoBob)
        loop
    Deselect:
        TNT1 AA 1 A_TakeInventory ("S7_Sprinting", 0x7FFFFFFF)
        TNT1 A  1 A_Lower
        TNT1 A  0 A_Lower
        wait
    }
}

//-------------------------------------------------------------------------------------------
//
// Quick melee key
//
//-------------------------------------------------------------------------------------------
actor S7_DoMelee  : boolean { }
actor S7_MeleeKey : S7_CustomKey {
    states {
    Use:
        TNT1 A 0 A_GiveInventory ("S7_DoMelee", 1)
        fail
    }
}

//-------------------------------------------------------------------------------------------
//
// Reload key
//
//-------------------------------------------------------------------------------------------
actor S7_Reloading     : boolean { }
actor S7_ReloadKey     : S7_CustomKey {
    states {
    Use:
        TNT1 A 0 A_JumpIfInventory ("S7_Reloading", 1, "Take")
        TNT1 A 0 A_GiveInventory ("S7_Reloading", 1)
        fail
    Take:
        TNT1 A 0 A_TakeInventory ("S7_Reloading", 1)
        fail
    }
}

//-------------------------------------------------------------------------------------------
//
// Change firing mode key
//
//-------------------------------------------------------------------------------------------
actor S7_ChangeFireMode : boolean { }
actor S7_FiringModeKey  : S7_CustomKey {
    states {
    Use:
        TNT1 A 0 A_GiveInventory ("S7_ChangeFireMode", 1)
        fail
    }
}

//-------------------------------------------------------------------------------------------
//
// Drop weapon key
//
//-------------------------------------------------------------------------------------------
actor S7_DropDatWeapon : boolean { }
actor S7_DropWeaponKey : S7_CustomKey {
    states {
    Use:
        TNT1 A 0 A_GiveInventory ("S7_DropDatWeapon", 1)
        fail
    }
}

//-------------------------------------------------------------------------------------------
//
// Show popup 1 key (Full inventory list)
//
//-------------------------------------------------------------------------------------------
actor S7_ShowPop1Key : S7_CustomKey {
    states {
    Use:
        TNT1 A 0 ACS_NamedExecuteAlways ("S7_ShowPop1", 0)
        fail
    }
}

//-------------------------------------------------------------------------------------------
//
// Stamina
//
//-------------------------------------------------------------------------------------------
actor S7_StaminaRegen  : boolean { }
actor S7_Stamina       : ammo    { inventory.maxAmount 150 +inventory.undroppable -inventory.invBar }

//-------------------------------------------------------------------------------------------
//
// Mana
//
//-------------------------------------------------------------------------------------------
actor S7_ManaRegen     : boolean { }
actor S7_Mana          : ammo    { inventory.maxAmount 250 +inventory.undroppable -inventory.invBar }

//-------------------------------------------------------------------------------------------
//
// Parkour
//
//-------------------------------------------------------------------------------------------
// Multijumping
actor S7_MultiJump_Max : counter { inventory.maxAmount 200 }

// Dodging
actor S7_PowerDodgeInvuln : PowerInvulnerable {
    powerup.duration -60
    inventory.icon ""

}
actor S7_PowerDodgeTrail : PowerSpeed {
    speed 1.0
    powerup.duration 2
    inventory.icon ""
}

// Walljumping
// Based on code by Ijon Tichy
actor S7_WallChecker : fastProjectile {
    radius 4
    height 16

    +thruActors +painless +bloodlessImpact +puffGetsOwner
    +cannotpush +noDamageThrust +noTimeFreeze +moveWithSector
    -activateImpact -activatePCross

    states {
    Spawn:
    Death:
        TNT1 A 1
        stop
    }
}

//-------------------------------------------------------------------------------------------
//
// AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//
//-------------------------------------------------------------------------------------------
actor GETTHATSHITOUTTAHERE {
    health -1
    radius 20
    height 56
    mass 500
    speed 10
    painChance 100
    monster
    seeSound "skeleton/sight"
    painSound "skeleton/sight"
    deathSound "skeleton/sight"
    activeSound "skeleton/sight"

    +invulnerable +noDamage +noClip +missileMore
    +missileEvenMore +floorClip +lookAllAround
    -countKill -solid -shootable -isMonster

    states {
    Spawn:
        SKEL AB 5 A_Look
        loop
    See:
        SKEL AABBCCDDEEFF 1 A_Chase
        loop
    Melee:
        TNT1 A 0 A_FaceTarget
        SKEL G 1 A_SkelWhoosh
        SKEL H 1 A_FaceTarget
        TNT1 A 0 A_CustomMeleeAttack (0)
        SKEL I 1 A_PlaySound ("skeleton/melee")
        goto See
    Missile:
        SKEL J 5 bright A_FaceTarget
        SKEL K 5        A_CustomMissile ("GETTHATSHITOUTTAHERETRACER")
        SKEL K 5        A_FaceTarget
        goto See
    Pain:
        SKEL L 2
        SKEL L 2 A_Pain
        goto See
    }
}

actor GETTHATSHITOUTTAHERETRACER : fastProjectile {
    radius 11
    height 8
    damage (1)
    speed 1000
    renderStyle add
    projectile
    seeSound "skeleton/attack"
    deathSound "skeleton/tracex"

    +seekerMissile +randomize

    states {
    Spawn:
        FATB AB 1 bright A_Tracer
        loop
    Death:
        FBXP ABC 1 bright
        stop
    }
}