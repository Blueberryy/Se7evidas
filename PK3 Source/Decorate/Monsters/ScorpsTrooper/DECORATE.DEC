//-------------------------------------------------------------------------------------------
//
// Shadow Corps Trooper
//
//-------------------------------------------------------------------------------------------
actor S7_ManxCarbineTracerEnemy : S7_ManxCarbineTracer { damage (random [weaponDamage] (1, 3) * 2) }
actor S7_ScorpsTrooper : S7_ScorpBase replaces zombieman {
    health 30
    gibHealth -15
    painChance 200
    painSound "Monsters/SCorps1/Pain"
    deathSound "Monsters/SCorps1/Death"
    obituary "$OBSCORPSTROOPER"
    species "ScorpsTrooper"
    tag "$SCRPSTROOTAG"

    +missileMore

    states {
    Spawn:
        TNT1 A 0 noDelay A_SetUserVar ("user_ammo", random (3, 23))
        SCR1 A 2         ACS_NamedExecuteAlways ("S7_ZombieScript", 0)
    Idle:
        SCR1 AAAAAAAAAA 10 A_Look
        TNT1 A           0 A_Jump (160.0, "Idle")
        TNT1 A           0 A_JumpIf (user_ammo < 10, "Reload")
        loop
    See:
        SCR1 AABBCCDD 3 A_Chase
        SCR1 AABBCCDD 3 A_Chase
        TNT1 A        0 A_Jump (192.0, "See")
        TNT1 A        0 A_JumpIf (user_ammo < 5, "Reload")
        loop

    Missile:
        SCR1 CD 2 A_FaceTarget (90, 45)
        SCR1 E  1 A_SetTics (random (3, 8))
    ChooseMode:
        TNT1 A 0 A_JumpIfCloser (384.0, "Shoot.FullAuto")
        TNT1 A 0 A_SetUserVar ("user_fireMode", 0)
        TNT1 A 0 A_SetUserVar ("user_turn", 20)
        TNT1 A 0 A_SetUserVar ("user_spreadX", 3.625 * 65536.0)
        TNT1 A 0 A_SetUserVar ("user_spreadY", 2.625 * 65536.0)
        goto DoShoot

    Shoot.FullAuto:
        TNT1 A 0 A_SetUserVar ("user_fireMode", 1)
        TNT1 A 0 A_SetUserVar ("user_turn", 30)
        TNT1 A 0 A_SetUserVar ("user_spreadX", 4 * 65536.0)
        TNT1 A 0 A_SetUserVar ("user_spreadY", 3 * 65536.0)
        goto DoShoot
    DoShoot:
        TNT1 A     0 A_JumpIf (user_ammo <= 0, "DryFire")
        TNT1 A     0 A_JumpIf (user_fireMode == 1, 7)
        TNT1 A     0 A_Jump (256, 2, 3, 4)
        SCR1 EEEEE 1 A_FaceTarget (user_turn * 1.0, user_turn * 1.0)
        TNT1 AAAAA 0 A_FaceTarget (0, 0)
        SCR1 E     1 A_FaceTarget (0, 0)
        TNT1 A     0 A_PlaySound ("Weapons/ManxCarbine/Fire", CHAN_Weapon)
        TNT1 A     0 A_CustomMissile ("S7_ManxCarbineTracerEnemy", 35.0, 9, angle + fRandom [monsterSpread] (-user_spreadX / 65536.0, user_spreadX / 65536.0), CMF_AbsolutePitch | CMF_AbsoluteAngle, pitch + fRandom [monsterSpread] (-user_spreadY / 65536.0, user_spreadY / 65536.0))
        TNT1 A     0 A_CustomMissile ("S7_9mmCasingSpawn",         35.0, 9, 0.0, CMF_AbsolutePitch | CMF_AimDirection, 0.0)
        SCR1 F     1 A_CustomMissile ("S7_ShotSmoke_2_Spawner",    35.0, 9, 0.0, CMF_AbsolutePitch | CMF_AimDirection, 0.0)
        SCR1 E     3 A_SetUserVar ("user_ammo", user_ammo - 1)
        TNT1 A     0 A_Jump (48, "EndShoot")       // Occasionally stop firing
        TNT1 A     0 A_JumpIfTargetInLOS (2, 90.0) // Keep firing if target on LOS
        TNT1 A     0 A_Jump (128, "CoverFire")     // Occasionally keep firing anyway
        goto EndShoot
        SCR1 E     3 A_Jump (256, "DoShoot")
        wait

    CoverFire:
        TNT1 A 0 A_JumpIf (user_ammo <= 0, "DryFire")
        TNT1 A 0 A_JumpIf (user_fireMode == 1, 2)
        SCR1 E 1 A_SetTics (random (1, 3))
        SCR1 E 1
        TNT1 A 0 A_PlaySound ("Weapons/ManxCarbine/Fire", CHAN_Weapon)
        TNT1 A 0 A_CustomMissile ("S7_ShotSmoke_2_Spawner",    35.0, 9, 0.0, CMF_AbsolutePitch | CMF_AimDirection, 0.0)
        TNT1 A 0 A_CustomMissile ("S7_9mmCasingSpawn",         35.0, 9, 0.0, CMF_AbsolutePitch | CMF_AimDirection, 0.0)
        SCR1 F 1 A_CustomMissile ("S7_ManxCarbineTracerEnemy", 35.0, 9, fRandom [monsterSpread] (-user_spreadX / 65536.0, user_spreadX / 65536.0), CMF_AimDirection | CMF_AbsolutePitch | CMF_SavePitch, pitch + fRandom [monsterSpread] (-user_spreadY / 65536.0, user_spreadY / 65536.0))
        SCR1 E 3 A_SetUserVar ("user_ammo", user_ammo - 1)
        TNT1 A 0 A_JumpIfTargetInLOS ("DoShoot", 90.0) // If the target comes into LOS, go back to normal shooting
        TNT1 A 0 A_Jump (96, "EndShoot")                  // Occasionally stop firing
        SCR1 E 3 A_Jump (256, "CoverFire")
        wait

    EndShoot:
        SCR1 E 2
        goto See

    DryFire:
        SCR1 E    3 A_PlaySound ("Weapons/DryFireRifle", CHAN_7)
        TNT1 A    0 A_Jump (192, "Reload")
    DryFire.FindCover:
        SCR1 AABBCCDD 4 A_Wander
        TNT1 A        0 A_JumpIfInTargetLOS ("Reload", 225.0, JLOSF_NoSight)
        loop

    Reload:
        SCR1 A      5 A_SetUserVar ("user_ammo", 23)
        SCR1 AAAEE  2
        SCR1 EEEEEE 1
        SCR1 E      1 A_PlaySound ("Weapons/ManxCarbine/In", CHAN_Weapon)
        SCR1 E      1
        SCR1 EEEAAA 2
        SCR1 A      3
        goto See

    Pain:
        SCR1 G 2
        SCR1 G 2 A_Pain
        goto See

    Death:
        SCR1 H 5 A_SetUserVar ("user_deathType", 0)
        SCR1 I 5 A_Scream
        SCR1 J 5
        TNT1 A 0 A_NoBlocking
    Death_AirLoop:
        SCR1 J 1
        TNT1 A 0 A_CheckFloor ("Death_HitGround")
        loop
    Death_HitGround:
        SCR1 K  5
        SCR1 L -1
        Stop

    Death.Fire:
        TNT1 A 0 A_JumpIfHealthLower (-7, "RealDeath.Fire")
        goto Death
    Death.Fire2:
    RealDeath.Fire:
        BURN ABC        5 bright A_Pain
        BURN D          5 bright A_Pain
        TNT1 A          0        A_NoBlocking
        BURN EFGHIJKLMN 5 bright
        BURN O          5 bright
        BURN PQRSTU     5 bright
        BURN V          1
        wait

    XDeath:
        SPOS M     5 A_SetUserVar ("user_deathType", 1)
        SPOS N     5 A_XScream
        SPOS O     5 A_NoBlocking
        SPOS PQRST 5
        SPOS U    -1
        stop

    Raise:
        SCR1 K   5 A_JumpIf (user_deathType == 1, "XRaise")
        SCR1 JIH 5
        goto See
    XRaise:
        SPOS T       5
        SPOS SRQPONM 5
        goto See
    }
}