//-------------------------------------------------------------------------------------------
//
// FS/002A Mod 4 "Fauchard" Automatic Rifle
//
//-------------------------------------------------------------------------------------------
actor S7_FauchardMag : ammo {
    inventory.maxAmount 23
    ammo.backpackMaxAmount 23

    +ignoreSkill
}

actor S7_FauchardHT : boolean { }
actor S7_Fauchard   : S7_BaseWeapon 30005 {
    tag "$FAUCHARD"
    inventory.pickupMessage "$FAUCHARD"
    weapon.ammoType1 "S7_FauchardMag"
    weapon.ammoType2 "S7_FBSysCells"
    weapon.ammoUse 1
    weapon.ammoGive 0

    states {
    Spawn:
        LSRF Z -1
        stop

    Ready:
    Ready2:
        TNT1 A 0 A_JumpIfInventory ("S7_Reloading", 1, "Reload")
        TNT1 A 0 A_JumpIfInventory ("S7_DoMelee", 1, "QuickMelee")
        TNT1 A 0 A_TakeInventory ("S7_ChangeFireMode", 0x7FFFFFFF)
        LSRF A 1 A_WeaponReady
        loop

    Fire:
        TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
        TNT1 A 0 A_JumpIfInventory ("S7_FauchardHT", 1, "Fire2.Sound")
        TNT1 A 0 A_PlaySound ("Weapons/Fauchard/Fire", CHAN_Weapon)
    Fire.Continue:
        TNT1 A  0 A_AlertMonsters
        TNT1 A  0 A_GunFlash
        TNT1 A  0 A_FireCustomMissile ("S7_ShotSmoke_2_Spawner", 0, 0, 2, 4)
        TNT1 A  0 A_FireCustomMissile ("FauchardTracer", fRandom [weaponSpread] (-0.15, 0.15), 1, 6, -3, 0, fRandom [weaponSpread] (-0.2, 0.2))
        LSRF AB 1 A_SetPitch (pitch - 0.3, SPF_Interpolate)
        TNT1 A  0 A_JumpIfInventory ("S7_FauchardHT", 1, "Fire2")
        LSRF A  2 A_GiveInventory ("S7_FauchardHT", 1)
        LSRF A  1 A_Refire
        goto Ready2
    Fire2.Sound:
        TNT1 A 0 A_PlaySound ("Weapons/Fauchard/Fire", CHAN_5)
        goto Fire.Continue
    Fire2:
        LSRF A 1 A_TakeInventory ("S7_FauchardHT", 0x7FFFFFFF)
        LSRF A 1 A_Refire
        goto Ready2

    Flash:
        LSRF XY 1 bright
        stop

    DryFire:
        LSRF A 3 A_PlaySound ("Weapons/DryFireRifle", CHAN_7)
        TNT1 A 0 A_JumpIfInventory ("S7_AutoReloading", 1, "Reload")
        goto Ready2

    Reload:
        TNT1 A 0 A_TakeInventory ("S7_Reloading", 1)
        TNT1 A 0 A_JumpIfInventory ("S7_FauchardMag", 0, "Ready2")
        TNT1 A 0 A_JumpIfInventory ("S7_FBSysCells", 1, "TrueReload")
        goto Ready2
    TrueReload:
        TNT1 A 0 A_JumpIfInventory ("S7_FauchardMag", 0, "ReloadFinish")
        TNT1 A 0 A_JumpIfInventory ("S7_FBSysCells", 1, 1)
        goto ReloadFinish
        TNT1 A 0 A_GiveInventory ("S7_FauchardMag", 1)
        TNT1 A 0 A_TakeInventory ("S7_FBSysCells", 1)
        loop
    ReloadFinish:
        LSRF ACDEFGH   2
        LSRF I         2 A_PlaySound ("Weapons/Fauchard/Out", CHAN_Weapon)
        LSRF J        30
        LSRF J        12 A_PlaySound ("Weapons/Fauchard/In", CHAN_5)
        LSRF KHGFEDCA  2
        goto Ready2
    }
}

//-------------------------------------------------------------------------------------------
//
// Fauchard Tracer
//
//-------------------------------------------------------------------------------------------
actor FauchardTracer : S7_BaseTracer {
    damage (random [weaponDamage] (1, 5) * 12)
    health 150
    damageType LaserTracer
    scale 0.015
    missileType "S7_LaserTracerTrail"
    decal S7_LaserDecal

    -bloodSplatter

    states {
    Idle:
        LSFL A 1 bright
        wait

    Death:
    Crash:
        TNT1 A 0 A_FaceTarget
        TNT1 A 3 //A_SpawnItemEx ("S7_LaserPuff")
        stop
    XDeath:
        TNT1 A 3
        stop
    }
}

actor S7_LaserTracerTrail : S7_TracerEffectsBase {
    scale 0.015

    states {
    Spawn:
        LSFL B 1 bright noDelay A_SpawnItemEx ("S7_LaserTracerTrail2", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, SXF_Clientside | SXF_NoCheckPosition)
    Loople:
        "----" A 1 bright A_FadeOut (0.13)
        wait
    }
}

actor S7_LaserTracerTrail2 : S7_LaserTracerTrail {
    states {
    Spawn:
        LSFL A 1 bright
        goto Loople
    }
}