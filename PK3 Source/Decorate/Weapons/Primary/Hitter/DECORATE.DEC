//-------------------------------------------------------------------------------------------
//
// SR20 "Hitter" .45 ACP SMG
//
//-------------------------------------------------------------------------------------------
actor S7_HitterSMGClip : ammo {
    inventory.maxAmount 62
    ammo.backpackMaxAmount 62

    +ignoreSkill
}

actor S7_HitterSMGUpperJammed : boolean { }
actor S7_HitterSMGLowerJammed : boolean { }
actor S7_HitterSMGChannel5    : boolean { }

actor S7_HitterSMG : S7_BaseWeapon 30007 {
    tag "$HITTERSMG"
    inventory.pickupMessage "HITTERSMG"
    weapon.ammoType1 "S7_HitterSMGClip"
    weapon.ammoType2 "S7_45ACPCartridges"
    weapon.ammoUse 1
    weapon.ammoGive 0

    states {
    Spawn:
        SR20 Z -1
        loop

    Ready:
    Ready2:
        TNT1 A 0 A_JumpIfInventory ("S7_Reloading", 1, "Reload")
        TNT1 A 0 A_JumpIfInventory ("S7_DoMelee", 1, "QuickMelee")
        TNT1 A 0 A_TakeInventory ("S7_ChangeFireMode", 1)
        SR20 A 1 A_WeaponReady
        loop

    Fire:
        SR20 A 1 A_JumpIfInventory ("S7_HitterSMGClip", 2, 1)
        goto DryFire
        TNT1 A 0
        goto Hold
    Hold:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGClip", 2, 1)
        goto DryFire.Firing
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGUpperJammed", 1, "Hold.FireDryUpper")
        TNT1 A 0 A_FireCustomMissile ("S7_45ACPCasingSpawn", 0, 0, 9, -2)
        TNT1 A 0 A_FireCustomMissile ("S7_HitterSMGTracer", fRandom [weaponSpread] (-5.5, 5.5), 1, 3, 2, 0, fRandom [weaponSpread] (-4.5, 4.5))
        goto Hold.FireLower
    Hold.FireDryUpper:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGLowerJammed", 1, "DoubleJammed")
        TNT1 A 0 A_PlaySound ("Weapons/DryFirePistol", CHAN_6)
        goto Hold.FireLower

    Hold.FireLower:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGLowerJammed", 1, "Hold.FireDryLower")
        TNT1 A 0 A_JumpIfNoAmmo ("Hold.FireDryLower")
        TNT1 A 0 A_FireCustomMissile ("S7_45ACPCasingSpawn", 0, 0, 9, -2)
        TNT1 A 0 A_FireCustomMissile ("S7_HitterSMGTracer", fRandom [weaponSpread] (-5.5, 5.5), 1, 2, 2, 0, fRandom [weaponSpread] (-4.5, 4.5))
        goto Hold.ChooseChannel
    Hold.FireDryLower:
        TNT1 A 0 A_PlaySound ("Weapons/DryFirePistol", CHAN_7)
        goto Hold.ChooseChannel

    Hold.ChooseChannel:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGChannel5", 1, "Hold.Chan5")
        TNT1 A 0 A_PlaySound ("Weapons/HitterSMG/Fire", CHAN_Weapon)
        TNT1 A 0 A_GiveInventory ("S7_HitterSMGChannel5", 1)
        goto Hold.FireEnd
    Hold.Chan5:
        TNT1 A 0 A_PlaySound ("Weapons/HitterSMG/Fire", CHAN_5)
        TNT1 A 0 A_TakeInventory ("S7_HitterSMGChannel5", 0x7FFFFFFF)
        goto Hold.FireEnd

    Hold.FireEnd:
        TNT1 A  0 A_AlertMonsters
        TNT1 A  0 A_GunFlash
        TNT1 A  0 A_FireCustomMissile ("S7_ShotSmoke_2_Spawner", 0, 0, 2, 4.5)
        SR20 AE 1 A_SetPitch (pitch - 0.85, SPF_Interpolate)
        SR20 D  1
        TNT1 A  0 A_Jump (3, 1, 1, 2, 2, 3) // More likely to jam only one barrel
        goto Hold.FireEnd.End
        TNT1 A  0 A_GiveInventory ("S7_HitterSMGUpperJammed", 1)
        goto Hold.FireEnd.End
        TNT1 A  0 A_GiveInventory ("S7_HitterSMGLowerJammed", 1)
        goto Hold.FireEnd.End
        TNT1 A  0 A_GiveInventory ("S7_HitterSMGUpperJammed", 1)
        TNT1 A  0 A_GiveInventory ("S7_HitterSMGLowerJammed", 1)
        goto Hold.FireEnd.End
    Hold.FireEnd.End:
        SR20 C  1 A_Refire ("Hold")
        SR20 BA 1 A_ClearRefire
        SR20 A  9
        goto Ready2

    DryFire:
        TNT1 A 0 A_ClearRefire
        SR20 A 3 A_PlaySound ("Weapons/DryFirePistol", CHAN_7)
        TNT1 A 0 A_JumpIfInventory ("S7_AutoReloading", 1, "Reload")
        goto Ready2
    DryFire.Firing:
        TNT1 A     0 A_ClearRefire
        TNT1 A     0 A_PlaySound ("Weapons/DryFirePistol", CHAN_7)
        SR20 AEDCB 1
        TNT1 A     0 A_JumpIfInventory ("S7_AutoReloading", 1, "Reload")
        goto Ready2

    DoubleJammed:
        TNT1 A 0 A_ClearRefire
    DoubleJammed.Loople:
        TNT1 A      0 A_PlaySound ("Weapons/DryFirePistol", CHAN_7)
        SR20 ACEDCB 1
        SR20 A      1 A_Refire ("DoubleJammed")
        goto Ready2

    AltFire:
        TNT1 A       0 A_ClearRefire
        SR20 AKLMNOP 1
    ClearJam.CasingUpper:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGUpperJammed", 1, 1)
        goto ClearJam.CasingLower
        TNT1 A 0 A_FireCustomMissile ("S7_45ACPCasingSpawn", 0, 0, 9, -2)
    ClearJam.CasingLower:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGLowerJammed", 1, 1)
        goto ClearJam.Finish
        TNT1 A 0 A_FireCustomMissile ("S7_45ACPCasingSpawn", 0, 0, 9, -2)
    ClearJam.Finish:
        TNT1 A        0 A_TakeInventory ("S7_HitterSMGUpperJammed", 0x7FFFFFFF)
        TNT1 A        0 A_TakeInventory ("S7_HitterSMGLowerJammed", 0x7FFFFFFF)
        TNT1 A        0 A_PlaySound ("Weapons/HitterSMG/Slide", CHAN_Weapon)
        SR20 QRSTUVWA 1
        goto Ready2

    Reload:
        TNT1 A 0 A_ClearRefire
        TNT1 A 0 A_TakeInventory ("S7_Reloading", 1)
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGClip", 0, "Ready2")
        TNT1 A 0 A_JumpIfInventory ("S7_45ACPCartridges", 1, "TrueReload")
        goto Ready2
    TrueReload:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGClip", 0, "ReloadFinish")
        TNT1 A 0 A_JumpIfInventory ("S7_45ACPCartridges", 1, 1)
        goto ReloadFinish
        TNT1 A 0 A_GiveInventory ("S7_HitterSMGClip", 1)
        TNT1 A 0 A_TakeInventory ("S7_45ACPCartridges", 1)
        loop
    ReloadFinish:
        // Reloading anim here
        SR20 AF  1
        TNT1 A   0 A_PlaySound ("Weapons/HitterSMG/Out", CHAN_Weapon)
        SR20 GH  1
        SR20 I  18
        SR20 I  28 A_PlaySound ("Weapons/HitterSMG/In", CHAN_Weapon)
        SR20 JA  1
        goto Ready2

    Flash:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGUpperJammed", 1, "Flash.UpperJammed")
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGLowerJammed", 1, "Flash.LowerJammed")
        SR2F A 1 bright
        stop
    Flash.UpperJammed:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGLowerJammed", 1, "Flash.BothJammed")
        SR2F C 1 bright
        stop
    Flash.LowerJammed:
        TNT1 A 0 A_JumpIfInventory ("S7_HitterSMGUpperJammed", 1, "Flash.BothJammed")
        SR2F B 1 bright
        stop
    Flash.BothJammed:
        TNT1 A 1 bright
        stop
    }
}